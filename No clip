local function callback(Text)
end
 
local NotificationBindable = Instance.new("BindableFunction")
NotificationBindable.OnInvoke = callback
 
game.StarterGui:SetCore("SendNotification", {
    Title = "No-Clip";
    Text = "By @moonwalker.24";
    Duration = "5";
    Callback = NotificationBindable;
})

-- No clip script toggled by the letter "L" with notifications

local noclip = false
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local mouse = player:GetMouse()

-- Create notification function using SetCore
local function notify(title, text)
    local NotificationBindable = Instance.new("BindableFunction")
    NotificationBindable.OnInvoke = function() end
    
    game.StarterGui:SetCore("SendNotification", {
        Title = title;
        Text = text;
        Duration = 5;
        Callback = NotificationBindable;
    })
end

function toggleNoclip()
    noclip = not noclip
    if noclip then
        -- Make the character non-collidable
        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
        game:GetService("RunService").Stepped:Connect(function()
            if noclip then
                for _, part in pairs(character:GetDescendants()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = false
                    end
                end
            end
        end)
        notify("No-clip ON", "By @moonwalker.24")
    else
        -- Restore character's collidability
        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = true
            end
        end
        notify("No-clip OFF", "By @moonwalker.24")
    end
end

-- Bind the toggle function to the "L" key
mouse.KeyDown:Connect(function(key)
    if key:lower() == "l" then
        toggleNoclip()
    end
end)
